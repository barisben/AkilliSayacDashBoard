@using System.Globalization;

@{
    ViewData["Title"] = "Anomalies";

    IEnumerable<Anomaly> anomalies = ViewData["Anomalies"] as IEnumerable<Anomaly>;
    IEnumerable<AnomalyType> anomalyTypes = ViewData["AnomalyTypes"] as IEnumerable<AnomalyType>;

    List<Anomaly> points = new List<Anomaly>();
    List<Anomaly> contextuals = new List<Anomaly>();
    List<Anomaly> collectives = new List<Anomaly>();

    int pointId = anomalyTypes.Where(x => x.AnomalyTypeName == "Point").FirstOrDefault().AnomalyTypeId;
    int contextualId = anomalyTypes.Where(x => x.AnomalyTypeName == "Contextual").FirstOrDefault().AnomalyTypeId;
    int collectiveId = anomalyTypes.Where(x => x.AnomalyTypeName == "Collective").FirstOrDefault().AnomalyTypeId;

    foreach (var anomaly in anomalies)
    {
        if (anomaly.AnomalyTypeId == pointId) points.Add(anomaly);
        else if (anomaly.AnomalyTypeId == contextualId) contextuals.Add(anomaly);
        else if (anomaly.AnomalyTypeId == collectiveId) collectives.Add(anomaly);
    }
}

<section class="section dashboard">
    <div class="row">

        <!-- Left side columns -->
        <div class="col-lg-8">
            <div class="row">
                <!-- Reports -->
                <div class="col-12">
                    <div class="card">

                        <div class="card-body">
                            <h5 class="card-title">Anomalies</h5>

                            <!-- Line Chart -->
                            <div id="chart"></div>

                            <script>
                                var options = {
                                    series: [
                                    {
                                        name: 'Point',
                                        data: [
                                            @{
                                                foreach(var point in points){
                                                    @:{
                                                        @:x:  "@point.AnomalyTime.ToString("dd MMM yyyy HH:mm:ss UTC", new CultureInfo("en-US"))",
                                                        @:y: @point.AnomalyValue,
                                                        @:message: "@point.AnomalyMessage"
                                                    @:},
                                                }
                                            }
                                            ]
                                    },
                                    {
                                        name: 'Contextual',
                                        data: [
                                            @{
                                                foreach(var contextual in contextuals){
                                                    @:{
                                                        @:x:  "@contextual.AnomalyTime.ToString("dd MMM yyyy HH:mm:ss UTC", new CultureInfo("en-US"))",
                                                        @:y: @contextual.AnomalyValue,
                                                        @:message: "@contextual.AnomalyMessage"
                                                    @:},
                                                }
                                            }
                                            ]
                                    },
                                    {
                                        name: 'Collective',
                                        data: [
                                            @{
                                                foreach(var collective in collectives){
                                                    @:{
                                                        @:x:  "@collective.AnomalyTime.ToString("dd MMM yyyy HH:mm:ss UTC", new CultureInfo("en-US"))",
                                                        @:y: @collective.AnomalyValue,
                                                        @:message: "@collective.AnomalyMessage"
                                                    @:},
                                                }
                                            }
                                            ]
                                    }
                                    ],
                                    chart: {
                                        height: 350,
                                        type: 'scatter',
                                        zoom: {
                                            type: 'xy'
                                        }
                                    },
                                    dataLabels: {
                                        enabled: false
                                    },
                                    grid: {
                                        xaxis: {
                                            lines: {
                                                show: true
                                            }
                                        },
                                        yaxis: {
                                            lines: {
                                                show: true
                                            }
                                        },
                                    },
                                    xaxis: {
                                        type: 'datetime'
                                    },
                                    yaxis: {
                                        max: 105
                                    },
                                    tooltip: {
                                        enabled: true,
                                        x: {
                                            format: 'dd MMM yyyy HH:mm:ss'
                                        },
                                        custom: function({ series, seriesIndex, dataPointIndex, w }) {
                                            var data = w.globals.initialSeries[seriesIndex].data[dataPointIndex];

                                            return '</br>' +
                                                '<ul>' +
                                                '<li><b>Date</b>: ' + data.x + '</li>' +
                                                '<li><b>Value</b>: ' + data.y + '</li>' +
                                                '<li><b>Message</b>: \'' + data.message + '\'</li>' +
                                                '</ul>';
                                        }
                                    }
                                };

                                var chart = new ApexCharts(document.querySelector("#chart"), options);
                                chart.render();
                            </script>

                            <!-- End Line Chart -->

                        </div>

                    </div>
                </div><!-- End Reports -->
            </div>
        </div><!-- End Left side columns -->
    </div>
</section>